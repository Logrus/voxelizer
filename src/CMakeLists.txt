find_package(PCL REQUIRED)
include_directories(${PCL_INCLUDE_DIRS})
link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

find_package(VTK REQUIRED)

find_package(OpenMP)
if (OPENMP_FOUND)
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()

set(VOXELIZER_H simplecloudreader.h voxelgrid.h)
set(VOXELIZER_CPP simplecloudreader.cpp voxelgrid.cpp)
set(VOXELIZER_QT_H mainwindow.h)
set(VOXELIZER_QT_UI mainwindow.ui)
set(VOXELIZER_QT_CPP mainwindow.cpp)

if(QT_VERSION STREQUAL 5)
  message("Using Qt5")
  find_package (Qt5Widgets REQUIRED)
  find_package (Qt5Core REQUIRED)
  QT5_WRAP_CPP (GUI_HEADERS_MOC   ${VOXELIZER_QT_H})
  QT5_WRAP_UI  (GUI_FORMS_HEADERS ${VOXELIZER_QT_UI})
  set(QT_LIBRARIES Qt5::Widgets Qt5::Core)
endif()
if(QT_VERSION STREQUAL 4)
  message("Using Qt4")
  find_package(Qt4 REQUIRED)
  include_directories(${QT_INCLUDE_DIRS})
  QT4_WRAP_CPP (GUI_HEADERS_MOC   ${VOXELIZER_QT_H})
  QT4_WRAP_UI  (GUI_FORMS_HEADERS ${VOXELIZER_QT_UI})
  include( ${QT_USE_FILE} )
  add_definitions( ${QT_DEFINITIONS} )
  include_directories( ${CMAKE_BINARY_DIR} )
  set(QT_LIBRARIES ${QT_LIBRARIES} QVTK)
endif()

include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_executable(voxelizer main.cpp ${VOXELIZER_QT_CPP} ${GUI_HEADERS_MOC} ${GUI_FORMS_HEADERS} ${VOXELIZER_CPP})
target_link_libraries(voxelizer ${PCL_LIBRARIES} ${QT_LIBRARIES} ${VTK_LIBRARIES})
